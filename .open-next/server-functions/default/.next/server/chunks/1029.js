"use strict";exports.id=1029,exports.ids=[1029],exports.modules={21029:(t,e,n)=>{n.d(e,{getEnvVar:()=>c});let o=Symbol.for("__cloudflare-context__");function r(){return globalThis[o]}async function a(){let t=r();if(t)return t;{let t=await l();return function(t){globalThis[o]=t}(t),t}}async function l(t){let{getPlatformProxy:e}=await import(`${"__wrangler".replaceAll("_","")}`),n=t?.environment??process.env.NEXT_DEV_WRANGLER_ENV,{env:o,cf:r,ctx:a}=await e({...t,environment:n});return{env:o,cf:r,ctx:a}}async function i(){try{return(await function(t={async:!1}){return t.async?a():function(){let t=r();if(t)return t;if(function(){let t=globalThis;return t.__NEXT_DATA__?.nextExport===!0}())throw Error("\n\nERROR: `getCloudflareContext` has been called in sync mode in either a static route or at the top level of a non-static one, both cases are not allowed but can be solved by either:\n  - make sure that the call is not at the top level and that the route is not static\n  - call `getCloudflareContext({async: true})` to use the `async` mode\n  - avoid calling `getCloudflareContext` in the route\n");throw Error('\n\nERROR: `getCloudflareContext` has been called without having called `initOpenNextCloudflareForDev` from the Next.js config file.\nYou should update your Next.js config file as shown below:\n\n   ```\n   // next.config.mjs\n\n   import { initOpenNextCloudflareForDev } from "@opennextjs/cloudflare";\n\n   initOpenNextCloudflareForDev();\n\n   const nextConfig = { ... };\n   export default nextConfig;\n   ```\n\n')}()}()).env}catch(t){return process.env}}async function c(t){return(await i())[t]}}};